<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20181.18.0416.1335                               -->
<workbook source-build='2018.1.0 (20181.18.0416.1335)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='all'>
      <format attr='color' value='#ffffff' />
    </style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='TeamSelector' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Philadelphia 76ers&quot;'>
        <calculation class='tableau' formula='&quot;Philadelphia 76ers&quot;' />
        <members>
          <member value='&quot;Atlanta Hawks&quot;' />
          <member value='&quot;Boston Celtics&quot;' />
          <member value='&quot;Brooklyn Nets&quot;' />
          <member value='&quot;Charlotte Bobcats&quot;' />
          <member value='&quot;Charlotte Hornets&quot;' />
          <member value='&quot;Chicago Bulls&quot;' />
          <member value='&quot;Cleveland Cavaliers&quot;' />
          <member value='&quot;Dallas Mavericks&quot;' />
          <member value='&quot;Denver Nuggets&quot;' />
          <member value='&quot;Detroit Pistons&quot;' />
          <member value='&quot;Golden State Warriors&quot;' />
          <member value='&quot;Houston Rockets&quot;' />
          <member value='&quot;Indiana Pacers&quot;' />
          <member value='&quot;Los Angeles Clippers&quot;' />
          <member value='&quot;Los Angeles Lakers&quot;' />
          <member value='&quot;Memphis Grizzlies&quot;' />
          <member value='&quot;Miami Heat&quot;' />
          <member value='&quot;Milwaukee Bucks&quot;' />
          <member value='&quot;Minnesota Timberwolves&quot;' />
          <member value='&quot;New Jersey Nets&quot;' />
          <member value='&quot;New Orleans Hornets&quot;' />
          <member value='&quot;New Orleans Pelicans&quot;' />
          <member value='&quot;New York Knicks&quot;' />
          <member value='&quot;Oklahoma City Thunder&quot;' />
          <member value='&quot;Orlando Magic&quot;' />
          <member value='&quot;Philadelphia 76ers&quot;' />
          <member value='&quot;Phoenix Suns&quot;' />
          <member value='&quot;Portland Trailblazers&quot;' />
          <member value='&quot;Sacramento Kings&quot;' />
          <member value='&quot;San Antonio Spurs&quot;' />
          <member value='&quot;Seattle SuperSonics&quot;' />
          <member value='&quot;Toronto Raptors&quot;' />
          <member value='&quot;Utah Jazz&quot;' />
          <member value='&quot;Vancouver Grizzlies&quot;' />
          <member value='&quot;Washington Bullets&quot;' />
          <member value='&quot;Washington Wizards&quot;' />
        </members>
      </column>
      <column caption='SeasonSelector' datatype='string' datatype-customized='true' name='[TeamSelector (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;2002-03&quot;'>
        <calculation class='tableau' formula='&quot;2002-03&quot;' />
        <members>
          <member value='&quot;1990-91&quot;' />
          <member value='&quot;1991-92&quot;' />
          <member value='&quot;1992-93&quot;' />
          <member value='&quot;1993-94&quot;' />
          <member value='&quot;1994-95&quot;' />
          <member value='&quot;1995-96&quot;' />
          <member value='&quot;1996-97&quot;' />
          <member value='&quot;1997-98&quot;' />
          <member value='&quot;1998-99&quot;' />
          <member value='&quot;1999-00&quot;' />
          <member value='&quot;2000-01&quot;' />
          <member value='&quot;2001-02&quot;' />
          <member value='&quot;2002-03&quot;' />
          <member value='&quot;2003-04&quot;' />
          <member value='&quot;2004-05&quot;' />
          <member value='&quot;2005-06&quot;' />
          <member value='&quot;2006-07&quot;' />
          <member value='&quot;2007-08&quot;' />
          <member value='&quot;2008-09&quot;' />
          <member value='&quot;2009-10&quot;' />
          <member value='&quot;2010-11&quot;' />
          <member value='&quot;2011-12&quot;' />
          <member value='&quot;2012-13&quot;' />
          <member value='&quot;2013-14&quot;' />
          <member value='&quot;2014-15&quot;' />
          <member value='&quot;2015-16&quot;' />
          <member value='&quot;2016-17&quot;' />
          <member value='&quot;2017-18&quot;' />
        </members>
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[TeamSelector (copy)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Detroit Pistons&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;1993-94&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2004-05&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='Team Salaries (NBA_Salary_History)' inline='true' name='federated.0rj90sh0xr1n4713xqode158fcyd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='NBA_Salary_History' name='excel-direct.1a8beh10g6jzex18ltl9y1yho0lq'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:/Users/Shreyansh/Downloads/NBA_Salary_History.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Team Salaries].[Team]' />
              <expression op='[Player Salaries].[Team]' />
            </expression>
          </clause>
          <relation connection='excel-direct.1a8beh10g6jzex18ltl9y1yho0lq' name='Team Salaries' table='[&apos;Team Salaries$&apos;]' type='table'>
            <columns gridOrigin='A1:D817:no:A1:D817:1' header='yes' lost='0' outcome='1' processed='1632'>
              <column datatype='string' name='Season' ordinal='0' />
              <column datatype='string' name='Team' ordinal='1' />
              <column datatype='integer' name='Salary Cap' ordinal='2' />
              <column datatype='integer' name='Total Salary' ordinal='3' />
            </columns>
          </relation>
          <relation connection='excel-direct.1a8beh10g6jzex18ltl9y1yho0lq' name='Player Salaries' table='[&apos;Player Salaries$&apos;]' type='table'>
            <columns gridOrigin='A1:D10001:no:A1:D10001:1' header='yes' lost='0' outcome='1' processed='9979'>
              <column datatype='string' name='Season' ordinal='0' />
              <column datatype='string' name='Team' ordinal='1' />
              <column datatype='string' name='Player' ordinal='2' />
              <column datatype='integer' name='Salary' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Player]' value='[Player Salaries].[Player]' />
          <map key='[Salary Cap]' value='[Team Salaries].[Salary Cap]' />
          <map key='[Salary]' value='[Player Salaries].[Salary]' />
          <map key='[Season (Player Salaries)]' value='[Player Salaries].[Season]' />
          <map key='[Season]' value='[Team Salaries].[Season]' />
          <map key='[Team (Player Salaries)]' value='[Player Salaries].[Team]' />
          <map key='[Team]' value='[Team Salaries].[Team]' />
          <map key='[Total Salary]' value='[Team Salaries].[Total Salary]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[Team Salaries]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[Team Salaries]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Salary Cap</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Salary Cap]</local-name>
            <parent-name>[Team Salaries]</parent-name>
            <remote-alias>Salary Cap</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Salary</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Salary]</local-name>
            <parent-name>[Team Salaries]</parent-name>
            <remote-alias>Total Salary</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Team Salaries]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D817:no:A1:D817:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>1632</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Season (Player Salaries)]</local-name>
            <parent-name>[Player Salaries]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Team (Player Salaries)]</local-name>
            <parent-name>[Player Salaries]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Player</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Player]</local-name>
            <parent-name>[Player Salaries]</parent-name>
            <remote-alias>Player</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Salary</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Salary]</local-name>
            <parent-name>[Player Salaries]</parent-name>
            <remote-alias>Salary</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Player Salaries]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D10001:no:A1:D10001:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>9979</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Rank' datatype='integer' name='[Calculation_1069604936230621184]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Calculation1' datatype='string' name='[Calculation_1069604936431730695]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if first() == 0 then&#13;&#10;&#13;&#10;lookup(attr([Player]),first())&#13;&#10;&#13;&#10;end'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='OverPaid?' datatype='boolean' name='[Calculation_120189837432500228]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [Calculation_371546990752247809] &gt; 0 THEN TRUE&#13;&#10;ELSE FALSE end' />
      </column>
      <column caption='TeamParameter' datatype='boolean' name='[Calculation_371546990747930624]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1]=[Team] and [Parameters].[Parameter 1] = [Team (Player Salaries)]&#13;&#10; THEN TRUE &#13;&#10;ELSE FALSE end' />
      </column>
      <column caption='TS-SalCap' datatype='integer' name='[Calculation_371546990752247809]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Total Salary]-[Salary Cap]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Player]' role='dimension' type='nominal' />
      <column datatype='string' name='[Season (Player Salaries)]' role='dimension' type='nominal' />
      <column caption='SeasonStartYear' datatype='date' datatype-customized='true' name='[Season - Split 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0rj90sh0xr1n4713xqode158fcyd].[Season]'>
        <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy&quot;, TRIM( SPLIT( [Season], &quot;-&quot;, 1 ) ) )) ' />
      </column>
      <column datatype='string' name='[Season]' role='dimension' type='nominal' />
      <column datatype='string' name='[Team (Player Salaries)]' role='dimension' type='nominal' />
      <column caption='Season Parameter' datatype='boolean' name='[ToF (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[TeamSelector (copy)]=[Season] &#13;&#10;and&#13;&#10;[Parameters].[TeamSelector (copy)]=[Season (Player Salaries)]&#13;&#10;THEN TRUE &#13;&#10;ELSE FALSE end' />
      </column>
      <column-instance column='[Calculation_120189837432500228]' derivation='None' name='[none:Calculation_120189837432500228:nk]' pivot='key' type='nominal' />
      <group caption='Action (OverOrUnderPaid,Season)' hidden='true' name='[Action (OverOrUnderPaid,Season)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_120189837432500228]' />
          <groupfilter function='level-members' level='[Season]' />
        </groupfilter>
      </group>
      <group caption='Action (Player)' hidden='true' name='[Action (Player)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Player]' />
        </groupfilter>
      </group>
      <group name='[Season (Player Salaries) &amp; Player (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Season (Player Salaries)]' />
          <groupfilter function='level-members' level='[Player]' />
        </groupfilter>
      </group>
      <group name='[Season (Player Salaries) &amp; Team (Player Salaries) (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Season (Player Salaries)]' />
          <groupfilter function='level-members' level='[Team (Player Salaries)]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.457143' measure-ordering='alphabetic' measure-percentage='0.362637' parameter-percentage='0.18022' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_120189837432500228:nk]' type='palette'>
            <map to='#00ff00'>
              <bucket>false</bucket>
            </map>
            <map to='#ff0000'>
              <bucket>true</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='TeamSelector' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Philadelphia 76ers&quot;'>
          <calculation class='tableau' formula='&quot;Philadelphia 76ers&quot;' />
        </column>
        <column caption='SeasonSelector' datatype='string' datatype-customized='true' name='[TeamSelector (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;2002-03&quot;'>
          <calculation class='tableau' formula='&quot;2002-03&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight1&lt;FILTERVALUES([Calculation_371546990747930624])&gt;' name='[Action1]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='TeamSelect' />
      <command command='tsc:brush'>
        <param name='exclude' value='KPI,SeasonSelect' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='KPI'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' underline='true'>Summary:</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Team Salaries (NBA_Salary_History)' name='federated.0rj90sh0xr1n4713xqode158fcyd' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='TeamSelector' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Philadelphia 76ers&quot;'>
              <calculation class='tableau' formula='&quot;Philadelphia 76ers&quot;' />
            </column>
            <column caption='SeasonSelector' datatype='string' datatype-customized='true' name='[TeamSelector (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;2002-03&quot;'>
              <calculation class='tableau' formula='&quot;2002-03&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0rj90sh0xr1n4713xqode158fcyd'>
            <column caption='TeamParameter' datatype='boolean' name='[Calculation_371546990747930624]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]=[Team] and [Parameters].[Parameter 1] = [Team (Player Salaries)]&#13;&#10; THEN TRUE &#13;&#10;ELSE FALSE end' />
            </column>
            <column caption='TS-SalCap' datatype='integer' name='[Calculation_371546990752247809]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total Salary]-[Salary Cap]' />
            </column>
            <column datatype='integer' name='[Salary Cap]' role='measure' type='quantitative' />
            <column datatype='string' name='[Season (Player Salaries)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column datatype='string' name='[Team (Player Salaries)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column caption='Season Parameter' datatype='boolean' name='[ToF (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[TeamSelector (copy)]=[Season] &#13;&#10;and&#13;&#10;[Parameters].[TeamSelector (copy)]=[Season (Player Salaries)]&#13;&#10;THEN TRUE &#13;&#10;ELSE FALSE end' />
            </column>
            <column datatype='integer' name='[Total Salary]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_371546990747930624]' derivation='None' name='[none:Calculation_371546990747930624:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[ToF (copy)]' derivation='None' name='[none:ToF (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_371546990752247809]' derivation='Sum' name='[sum:Calculation_371546990752247809:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Calculation_371546990747930624:nk]'>
            <groupfilter function='member' level='[none:Calculation_371546990747930624:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rj90sh0xr1n4713xqode158fcyd].[none:ToF (copy):nk]' filter-group='5'>
            <groupfilter function='member' level='[none:ToF (copy):nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Calculation_371546990747930624:nk]</column>
            <column>[federated.0rj90sh0xr1n4713xqode158fcyd].[none:ToF (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Team:nk]' value='96' />
            <format attr='width' value='219' />
            <format attr='text-format' field='[federated.0rj90sh0xr1n4713xqode158fcyd].[sum:Calculation_371546990752247809:qk]' value='n&quot;$&quot;#,##0,,,.00B;-&quot;$&quot;#,##0,,,.00B' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[Parameters].[TeamSelector (copy)]' />
              <text column='[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Team:nk]' />
              <text column='[federated.0rj90sh0xr1n4713xqode158fcyd].[sum:Calculation_371546990752247809:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='14'>Season:</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='14' underline='true'>&lt;[Parameters].[TeamSelector (copy)]&gt;</run>
                <run>Æ&#10;</run>
                <run fontsize='14'>Team:</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='14' underline='true'>&lt;[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Team:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontsize='14'> Total Salary Overpaid:</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='14' underline='true'>&lt;[federated.0rj90sh0xr1n4713xqode158fcyd].[sum:Calculation_371546990752247809:qk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Most Expensive Players Per Season'>
      <table>
        <view>
          <datasources>
            <datasource caption='Team Salaries (NBA_Salary_History)' name='federated.0rj90sh0xr1n4713xqode158fcyd' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='TeamSelector' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Philadelphia 76ers&quot;'>
              <calculation class='tableau' formula='&quot;Philadelphia 76ers&quot;' />
            </column>
            <column caption='SeasonSelector' datatype='string' datatype-customized='true' name='[TeamSelector (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;2002-03&quot;'>
              <calculation class='tableau' formula='&quot;2002-03&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0rj90sh0xr1n4713xqode158fcyd'>
            <column caption='Rank' datatype='integer' name='[Calculation_1069604936230621184]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='TeamParameter' datatype='boolean' name='[Calculation_371546990747930624]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]=[Team] and [Parameters].[Parameter 1] = [Team (Player Salaries)]&#13;&#10; THEN TRUE &#13;&#10;ELSE FALSE end' />
            </column>
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Salary]' role='measure' type='quantitative' />
            <column datatype='string' name='[Season (Player Salaries)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column datatype='string' name='[Team (Player Salaries)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column caption='Season Parameter' datatype='boolean' name='[ToF (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[TeamSelector (copy)]=[Season] &#13;&#10;and&#13;&#10;[Parameters].[TeamSelector (copy)]=[Season (Player Salaries)]&#13;&#10;THEN TRUE &#13;&#10;ELSE FALSE end' />
            </column>
            <column-instance column='[Calculation_371546990747930624]' derivation='None' name='[none:Calculation_371546990747930624:nk]' pivot='key' type='nominal' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[ToF (copy)]' derivation='None' name='[none:ToF (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Salary]' derivation='Sum' name='[sum:Salary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1069604936230621184]' derivation='User' name='[usr:Calculation_1069604936230621184:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Calculation_371546990747930624:nk]'>
            <groupfilter function='member' level='[none:Calculation_371546990747930624:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Player:nk]' direction='DESC' using='[federated.0rj90sh0xr1n4713xqode158fcyd].[sum:Salary:qk]' />
          <filter class='categorical' column='[federated.0rj90sh0xr1n4713xqode158fcyd].[none:ToF (copy):nk]'>
            <groupfilter function='member' level='[none:ToF (copy):nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rj90sh0xr1n4713xqode158fcyd].[usr:Calculation_1069604936230621184:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_1069604936230621184:ok]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_1069604936230621184:ok]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_1069604936230621184:ok]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_1069604936230621184:ok]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_1069604936230621184:ok]' member='5' />
              <groupfilter function='member' level='[usr:Calculation_1069604936230621184:ok]' member='6' />
              <groupfilter function='member' level='[usr:Calculation_1069604936230621184:ok]' member='7' />
              <groupfilter function='member' level='[usr:Calculation_1069604936230621184:ok]' member='8' />
              <groupfilter function='member' level='[usr:Calculation_1069604936230621184:ok]' member='9' />
              <groupfilter function='member' level='[usr:Calculation_1069604936230621184:ok]' member='10' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0rj90sh0xr1n4713xqode158fcyd].[none:ToF (copy):nk]</column>
            <column>[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Calculation_371546990747930624:nk]</column>
            <column>[federated.0rj90sh0xr1n4713xqode158fcyd].[usr:Calculation_1069604936230621184:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0rj90sh0xr1n4713xqode158fcyd].[Season (Player Salaries) &amp; Team (Player Salaries) (Combined)]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0rj90sh0xr1n4713xqode158fcyd].[sum:Salary:qk]' num-steps='10' palette='tableau-map-blue-green' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0rj90sh0xr1n4713xqode158fcyd].[sum:Salary:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.087458610534668' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0rj90sh0xr1n4713xqode158fcyd].[Season (Player Salaries) &amp; Team (Player Salaries) (Combined)] / ([federated.0rj90sh0xr1n4713xqode158fcyd].[usr:Calculation_1069604936230621184:ok] / [federated.0rj90sh0xr1n4713xqode158fcyd].[none:Player:nk]))</rows>
        <cols>[federated.0rj90sh0xr1n4713xqode158fcyd].[sum:Salary:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='SeasonSelect'>
      <table>
        <view>
          <datasources>
            <datasource caption='Team Salaries (NBA_Salary_History)' name='federated.0rj90sh0xr1n4713xqode158fcyd' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='SeasonSelector' datatype='string' datatype-customized='true' name='[TeamSelector (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;2002-03&quot;'>
              <calculation class='tableau' formula='&quot;2002-03&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0rj90sh0xr1n4713xqode158fcyd'>
            <column caption='OverPaid?' datatype='boolean' name='[Calculation_120189837432500228]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_371546990752247809] &gt; 0 THEN TRUE&#13;&#10;ELSE FALSE end' />
            </column>
            <column caption='TS-SalCap' datatype='integer' name='[Calculation_371546990752247809]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total Salary]-[Salary Cap]' />
            </column>
            <column datatype='integer' name='[Salary Cap]' role='measure' type='quantitative' />
            <column datatype='string' name='[Season (Player Salaries)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column caption='Season Parameter' datatype='boolean' name='[ToF (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[TeamSelector (copy)]=[Season] &#13;&#10;and&#13;&#10;[Parameters].[TeamSelector (copy)]=[Season (Player Salaries)]&#13;&#10;THEN TRUE &#13;&#10;ELSE FALSE end' />
            </column>
            <column datatype='integer' name='[Total Salary]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_120189837432500228]' derivation='None' name='[none:Calculation_120189837432500228:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[ToF (copy)]' derivation='None' name='[none:ToF (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_371546990752247809]' derivation='Sum' name='[sum:Calculation_371546990752247809:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Team:nk]' direction='DESC' using='[federated.0rj90sh0xr1n4713xqode158fcyd].[sum:Calculation_371546990752247809:qk]' />
          <filter class='categorical' column='[federated.0rj90sh0xr1n4713xqode158fcyd].[none:ToF (copy):nk]' filter-group='5'>
            <groupfilter function='member' level='[none:ToF (copy):nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0rj90sh0xr1n4713xqode158fcyd].[none:ToF (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0rj90sh0xr1n4713xqode158fcyd].[sum:Calculation_371546990752247809:qk]' scope='cols' value='Difference (Total Salary ~ Sal Cap)' />
            <encoding attr='space' class='1' field='[federated.0rj90sh0xr1n4713xqode158fcyd].[sum:Calculation_371546990752247809:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
            <format attr='display' class='1' field='[federated.0rj90sh0xr1n4713xqode158fcyd].[sum:Calculation_371546990752247809:qk]' scope='cols' value='false' />
            <format attr='render-fold-reversed' value='true' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='div-level' scope='cols' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0rj90sh0xr1n4713xqode158fcyd].[sum:Calculation_371546990752247809:qk]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ffffff' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0rj90sh0xr1n4713xqode158fcyd].[sum:Calculation_371546990752247809:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Calculation_120189837432500228:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Team:nk]</rows>
        <cols>([federated.0rj90sh0xr1n4713xqode158fcyd].[sum:Calculation_371546990752247809:qk] + [federated.0rj90sh0xr1n4713xqode158fcyd].[sum:Calculation_371546990752247809:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='TeamSelect'>
      <table>
        <view>
          <datasources>
            <datasource caption='Team Salaries (NBA_Salary_History)' name='federated.0rj90sh0xr1n4713xqode158fcyd' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='TeamSelector' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Philadelphia 76ers&quot;'>
              <calculation class='tableau' formula='&quot;Philadelphia 76ers&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0rj90sh0xr1n4713xqode158fcyd'>
            <column caption='OverPaid?' datatype='boolean' name='[Calculation_120189837432500228]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_371546990752247809] &gt; 0 THEN TRUE&#13;&#10;ELSE FALSE end' />
            </column>
            <column caption='TeamParameter' datatype='boolean' name='[Calculation_371546990747930624]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]=[Team] and [Parameters].[Parameter 1] = [Team (Player Salaries)]&#13;&#10; THEN TRUE &#13;&#10;ELSE FALSE end' />
            </column>
            <column caption='TS-SalCap' datatype='integer' name='[Calculation_371546990752247809]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total Salary]-[Salary Cap]' />
            </column>
            <column datatype='integer' name='[Salary Cap]' role='measure' type='quantitative' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column datatype='string' name='[Team (Player Salaries)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Total Salary]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_120189837432500228]' derivation='None' name='[none:Calculation_120189837432500228:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_371546990747930624]' derivation='None' name='[none:Calculation_371546990747930624:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_371546990752247809]' derivation='Sum' name='[sum:Calculation_371546990752247809:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Calculation_371546990747930624:nk]'>
            <groupfilter function='member' level='[none:Calculation_371546990747930624:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <alphabetic-sort column='[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Season:nk]' direction='ASC' />
          <slices>
            <column>[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Calculation_371546990747930624:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0rj90sh0xr1n4713xqode158fcyd].[sum:Calculation_371546990752247809:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Calculation_120189837432500228:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Season:nk]</rows>
        <cols>[federated.0rj90sh0xr1n4713xqode158fcyd].[sum:Calculation_371546990752247809:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#000000' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#000000' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#000000' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='background-color' value='#000000' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='color' value='#ffffff' />
          <format attr='text-align' value='center' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='53750' id='15' param='horz' type='layout-flow' w='98400' x='800' y='6000'>
            <zone h='53750' id='5' param='horz' type='layout-flow' w='91100' x='800' y='6000'>
              <zone h='53750' id='3' type='layout-basic' w='91100' x='800' y='6000'>
                <zone h='3667' id='12' mode='compact' param='[Parameters].[TeamSelector (copy)]' show-title='false' type='paramctrl' w='53200' x='800' y='6000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='3667' id='7' mode='compact' param='[Parameters].[Parameter 1]' show-title='false' type='paramctrl' w='37900' x='54000' y='6000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='50083' id='13' name='TeamSelect' show-title='false' w='37900' x='54000' y='9667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='50083' id='17' name='SeasonSelect' show-title='false' w='53200' x='800' y='9667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='73' h='53750' id='14' is-fixed='true' param='vert' type='layout-flow' w='7300' x='91900' y='6000'>
              <zone h='8250' id='16' name='TeamSelect' pane-specification-id='0' param='[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Calculation_120189837432500228:nk]' type='color' w='7300' x='91900' y='6000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='39250' id='18' name='KPI' w='45200' x='54000' y='59750'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='39250' id='19' name='Most Expensive Players Per Season' w='53200' x='800' y='59750'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone forceUpdate='true' h='5000' id='21' type='text' w='98400' x='800' y='1000'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontname='Mongolian Baiti' fontsize='22' underline='true'>NBA Teams vs Seasons vs Player Salaries:</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='88625' id='22' type='empty' w='97100' x='2100' y='10500' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='TeamSelect'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Calculation_120189837432500228:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[max:Calculation_120189837418045440:qk]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Calculation_120189837418045440:nk]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Calculation_120189837432500228:nk]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Calculation_371546990747930624:nk]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Player:nk]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Season (Player Salaries):nk]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[none:ToF (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='KPI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[TeamSelector (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Parameters].[TeamSelector (copy)]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Calculation_120189837432500228:nk]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Season (Player Salaries):nk]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Season:nk]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Team (Player Salaries):nk]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Team:nk]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[none:ToF (copy):nk]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[usr:Calculation1 (copy):nk]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[usr:Calculation_1069604936428068869:nk:2]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[usr:Calculation_1069604936431730695:nk]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[usr:Season Parameter (copy):nk:3]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='SeasonSelect'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[TeamSelector (copy)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Calculation_120189837432500228:nk]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Team (Player Salaries):nk]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Team:nk]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[none:ToF (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Most Expensive Players Per Season'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[TeamSelector (copy)]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0rj90sh0xr1n4713xqode158fcyd].[sum:Salary:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Parameters].[TeamSelector (copy)]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[Season (Player Salaries) &amp; Player (Combined)]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[Season (Player Salaries) &amp; Team (Player Salaries) (Combined)]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Calculation_1069604936428068869:nk]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Calculation_371546990747930624:nk]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Player:nk]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Season (Player Salaries):nk]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Season:nk]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Team (Player Salaries):nk]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Team:nk]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[none:ToF (copy):nk]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[usr:Calculation_1069604936230621184:ok]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[usr:Calculation_1069604936425541635:nk]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[usr:Calculation_1069604936428068869:nk]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[usr:Calculation_1069604936431730695:nk:3]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[usr:Calculation_1069604936431730695:nk]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[usr:Rank (copy):ok]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[usr:Season Parameter (copy):nk:1]</field>
            <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[usr:Season Parameter (copy):nk:4]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='KPI'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Most Expensive Players Per Season' />
        <viewpoint name='SeasonSelect'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='TeamSelect'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0rj90sh0xr1n4713xqode158fcyd].[none:Calculation_120189837432500228:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='KPI' width='192'>
      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
      Wf5LaOk4nQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Most Expensive Players Per Season' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SeasonSelect' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='TeamSelect' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
